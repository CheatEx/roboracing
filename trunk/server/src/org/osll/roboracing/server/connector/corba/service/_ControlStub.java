package org.osll.roboracing.server.connector.corba.service;


/**
* org/osll/roboracing/server/connector/corba/service/_ControlStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from service.idl
* 13 Декабрь 2008 г. 14:09:35 MSK
*/

public class _ControlStub extends org.omg.CORBA.portable.ObjectImpl implements org.osll.roboracing.server.connector.corba.service.Control
{

  public void connect (String name, org.osll.roboracing.server.connector.corba.service.Team team)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("connect", true);
                $out.write_string (name);
                org.osll.roboracing.server.connector.corba.service.TeamHelper.write ($out, team);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                connect (name, team        );
            } finally {
                _releaseReply ($in);
            }
  } // connect

  public org.osll.roboracing.server.connector.corba.service.Telemetry getTelemetry (String name)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTelemetry", true);
                $out.write_string (name);
                $in = _invoke ($out);
                org.osll.roboracing.server.connector.corba.service.Telemetry $result = org.osll.roboracing.server.connector.corba.service.TelemetryHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTelemetry (name        );
            } finally {
                _releaseReply ($in);
            }
  } // getTelemetry

  public void sendCommand (String name, org.osll.roboracing.server.connector.corba.service.ControlCommand command)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sendCommand", true);
                $out.write_string (name);
                org.osll.roboracing.server.connector.corba.service.ControlCommandHelper.write ($out, command);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                sendCommand (name, command        );
            } finally {
                _releaseReply ($in);
            }
  } // sendCommand

  public boolean isGameStarted ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("isGameStarted", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return isGameStarted (        );
            } finally {
                _releaseReply ($in);
            }
  } // isGameStarted

  public org.osll.roboracing.server.connector.corba.service.PhysicalConstraints getPhysicalConstraints ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPhysicalConstraints", true);
                $in = _invoke ($out);
                org.osll.roboracing.server.connector.corba.service.PhysicalConstraints $result = org.osll.roboracing.server.connector.corba.service.PhysicalConstraintsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPhysicalConstraints (        );
            } finally {
                _releaseReply ($in);
            }
  } // getPhysicalConstraints

  public long getTimeToStart ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTimeToStart", true);
                $in = _invoke ($out);
                long $result = $in.read_longlong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTimeToStart (        );
            } finally {
                _releaseReply ($in);
            }
  } // getTimeToStart

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/osll/roboracing/server/connector/corba/service/Control:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _ControlStub
